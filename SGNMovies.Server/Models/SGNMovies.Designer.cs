//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("SGNMovie", "FK_PCCinemas", "Cinema", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SGNMovies.Server.Models.Cinema), "ProviderCinema", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SGNMovies.Server.Models.ProviderCinema), true)]
[assembly: EdmRelationshipAttribute("SGNMovie", "FK_PCProvider", "Provider", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SGNMovies.Server.Models.Provider), "ProviderCinema", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SGNMovies.Server.Models.ProviderCinema), true)]
[assembly: EdmRelationshipAttribute("SGNMovie", "FK_STMovie", "Movie", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SGNMovies.Server.Models.Movie), "SessionTime", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SGNMovies.Server.Models.SessionTime), true)]
[assembly: EdmRelationshipAttribute("SGNMovie", "FK_STProviderCinema", "ProviderCinema", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SGNMovies.Server.Models.ProviderCinema), "SessionTime", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SGNMovies.Server.Models.SessionTime), true)]

#endregion

namespace SGNMovies.Server.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class SGNMovieContainer : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new SGNMovieContainer object using the connection string found in the 'SGNMovieContainer' section of the application configuration file.
        /// </summary>
        public SGNMovieContainer() : base("name=SGNMovieContainer", "SGNMovieContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SGNMovieContainer object.
        /// </summary>
        public SGNMovieContainer(string connectionString) : base(connectionString, "SGNMovieContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SGNMovieContainer object.
        /// </summary>
        public SGNMovieContainer(EntityConnection connection) : base(connection, "SGNMovieContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Cinema> Cinemas
        {
            get
            {
                if ((_Cinemas == null))
                {
                    _Cinemas = base.CreateObjectSet<Cinema>("Cinemas");
                }
                return _Cinemas;
            }
        }
        private ObjectSet<Cinema> _Cinemas;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Movie> Movies
        {
            get
            {
                if ((_Movies == null))
                {
                    _Movies = base.CreateObjectSet<Movie>("Movies");
                }
                return _Movies;
            }
        }
        private ObjectSet<Movie> _Movies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProviderCinema> ProviderCinemas
        {
            get
            {
                if ((_ProviderCinemas == null))
                {
                    _ProviderCinemas = base.CreateObjectSet<ProviderCinema>("ProviderCinemas");
                }
                return _ProviderCinemas;
            }
        }
        private ObjectSet<ProviderCinema> _ProviderCinemas;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Provider> Providers
        {
            get
            {
                if ((_Providers == null))
                {
                    _Providers = base.CreateObjectSet<Provider>("Providers");
                }
                return _Providers;
            }
        }
        private ObjectSet<Provider> _Providers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SessionTime> SessionTimes
        {
            get
            {
                if ((_SessionTimes == null))
                {
                    _SessionTimes = base.CreateObjectSet<SessionTime>("SessionTimes");
                }
                return _SessionTimes;
            }
        }
        private ObjectSet<SessionTime> _SessionTimes;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Cinemas EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCinemas(Cinema cinema)
        {
            base.AddObject("Cinemas", cinema);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Movies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMovies(Movie movie)
        {
            base.AddObject("Movies", movie);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProviderCinemas EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProviderCinemas(ProviderCinema providerCinema)
        {
            base.AddObject("ProviderCinemas", providerCinema);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Providers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProviders(Provider provider)
        {
            base.AddObject("Providers", provider);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SessionTimes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSessionTimes(SessionTime sessionTime)
        {
            base.AddObject("SessionTimes", sessionTime);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SGNMovie", Name="Cinema")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Cinema : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Cinema object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="cinemaWebId">Initial value of the CinemaWebId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="address">Initial value of the Address property.</param>
        /// <param name="phone">Initial value of the Phone property.</param>
        public static Cinema CreateCinema(global::System.Int32 id, global::System.String cinemaWebId, global::System.String name, global::System.String address, global::System.String phone)
        {
            Cinema cinema = new Cinema();
            cinema.Id = id;
            cinema.CinemaWebId = cinemaWebId;
            cinema.Name = name;
            cinema.Address = address;
            cinema.Phone = phone;
            return cinema;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CinemaWebId
        {
            get
            {
                return _CinemaWebId;
            }
            set
            {
                OnCinemaWebIdChanging(value);
                ReportPropertyChanging("CinemaWebId");
                _CinemaWebId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CinemaWebId");
                OnCinemaWebIdChanged();
            }
        }
        private global::System.String _CinemaWebId;
        partial void OnCinemaWebIdChanging(global::System.String value);
        partial void OnCinemaWebIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Latitude
        {
            get
            {
                return _Latitude;
            }
            set
            {
                OnLatitudeChanging(value);
                ReportPropertyChanging("Latitude");
                _Latitude = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Latitude");
                OnLatitudeChanged();
            }
        }
        private Nullable<global::System.Double> _Latitude;
        partial void OnLatitudeChanging(Nullable<global::System.Double> value);
        partial void OnLatitudeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Longitude
        {
            get
            {
                return _Longitude;
            }
            set
            {
                OnLongitudeChanging(value);
                ReportPropertyChanging("Longitude");
                _Longitude = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Longitude");
                OnLongitudeChanged();
            }
        }
        private Nullable<global::System.Double> _Longitude;
        partial void OnLongitudeChanging(Nullable<global::System.Double> value);
        partial void OnLongitudeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ImageUrl
        {
            get
            {
                return _ImageUrl;
            }
            set
            {
                OnImageUrlChanging(value);
                ReportPropertyChanging("ImageUrl");
                _ImageUrl = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ImageUrl");
                OnImageUrlChanged();
            }
        }
        private global::System.String _ImageUrl;
        partial void OnImageUrlChanging(global::System.String value);
        partial void OnImageUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MapUrl
        {
            get
            {
                return _MapUrl;
            }
            set
            {
                OnMapUrlChanging(value);
                ReportPropertyChanging("MapUrl");
                _MapUrl = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MapUrl");
                OnMapUrlChanged();
            }
        }
        private global::System.String _MapUrl;
        partial void OnMapUrlChanging(global::System.String value);
        partial void OnMapUrlChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SGNMovie", "FK_PCCinemas", "ProviderCinema")]
        public EntityCollection<ProviderCinema> ProviderCinemas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProviderCinema>("SGNMovie.FK_PCCinemas", "ProviderCinema");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProviderCinema>("SGNMovie.FK_PCCinemas", "ProviderCinema", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SGNMovie", Name="Movie")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Movie : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Movie object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="movieWebId">Initial value of the MovieWebId property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="isNowShowing">Initial value of the IsNowShowing property.</param>
        /// <param name="infoUrl">Initial value of the InfoUrl property.</param>
        public static Movie CreateMovie(global::System.Int32 id, global::System.String movieWebId, global::System.String title, global::System.Boolean isNowShowing, global::System.String infoUrl)
        {
            Movie movie = new Movie();
            movie.Id = id;
            movie.MovieWebId = movieWebId;
            movie.Title = title;
            movie.IsNowShowing = isNowShowing;
            movie.InfoUrl = infoUrl;
            return movie;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MovieWebId
        {
            get
            {
                return _MovieWebId;
            }
            set
            {
                OnMovieWebIdChanging(value);
                ReportPropertyChanging("MovieWebId");
                _MovieWebId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MovieWebId");
                OnMovieWebIdChanged();
            }
        }
        private global::System.String _MovieWebId;
        partial void OnMovieWebIdChanging(global::System.String value);
        partial void OnMovieWebIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Director
        {
            get
            {
                return _Director;
            }
            set
            {
                OnDirectorChanging(value);
                ReportPropertyChanging("Director");
                _Director = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Director");
                OnDirectorChanged();
            }
        }
        private global::System.String _Director;
        partial void OnDirectorChanging(global::System.String value);
        partial void OnDirectorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Duration
        {
            get
            {
                return _Duration;
            }
            set
            {
                OnDurationChanging(value);
                ReportPropertyChanging("Duration");
                _Duration = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Duration");
                OnDurationChanged();
            }
        }
        private global::System.String _Duration;
        partial void OnDurationChanging(global::System.String value);
        partial void OnDurationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Genre
        {
            get
            {
                return _Genre;
            }
            set
            {
                OnGenreChanging(value);
                ReportPropertyChanging("Genre");
                _Genre = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Genre");
                OnGenreChanged();
            }
        }
        private global::System.String _Genre;
        partial void OnGenreChanging(global::System.String value);
        partial void OnGenreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Cast
        {
            get
            {
                return _Cast;
            }
            set
            {
                OnCastChanging(value);
                ReportPropertyChanging("Cast");
                _Cast = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Cast");
                OnCastChanged();
            }
        }
        private global::System.String _Cast;
        partial void OnCastChanging(global::System.String value);
        partial void OnCastChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Language
        {
            get
            {
                return _Language;
            }
            set
            {
                OnLanguageChanging(value);
                ReportPropertyChanging("Language");
                _Language = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Language");
                OnLanguageChanged();
            }
        }
        private global::System.String _Language;
        partial void OnLanguageChanging(global::System.String value);
        partial void OnLanguageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Producer
        {
            get
            {
                return _Producer;
            }
            set
            {
                OnProducerChanging(value);
                ReportPropertyChanging("Producer");
                _Producer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Producer");
                OnProducerChanged();
            }
        }
        private global::System.String _Producer;
        partial void OnProducerChanging(global::System.String value);
        partial void OnProducerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Version
        {
            get
            {
                return _Version;
            }
            set
            {
                OnVersionChanging(value);
                ReportPropertyChanging("Version");
                _Version = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Version");
                OnVersionChanged();
            }
        }
        private global::System.String _Version;
        partial void OnVersionChanging(global::System.String value);
        partial void OnVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsNowShowing
        {
            get
            {
                return _IsNowShowing;
            }
            set
            {
                OnIsNowShowingChanging(value);
                ReportPropertyChanging("IsNowShowing");
                _IsNowShowing = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsNowShowing");
                OnIsNowShowingChanged();
            }
        }
        private global::System.Boolean _IsNowShowing;
        partial void OnIsNowShowingChanging(global::System.Boolean value);
        partial void OnIsNowShowingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String InfoUrl
        {
            get
            {
                return _InfoUrl;
            }
            set
            {
                OnInfoUrlChanging(value);
                ReportPropertyChanging("InfoUrl");
                _InfoUrl = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("InfoUrl");
                OnInfoUrlChanged();
            }
        }
        private global::System.String _InfoUrl;
        partial void OnInfoUrlChanging(global::System.String value);
        partial void OnInfoUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ImageUrl
        {
            get
            {
                return _ImageUrl;
            }
            set
            {
                OnImageUrlChanging(value);
                ReportPropertyChanging("ImageUrl");
                _ImageUrl = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ImageUrl");
                OnImageUrlChanged();
            }
        }
        private global::System.String _ImageUrl;
        partial void OnImageUrlChanging(global::System.String value);
        partial void OnImageUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TrailerUrl
        {
            get
            {
                return _TrailerUrl;
            }
            set
            {
                OnTrailerUrlChanging(value);
                ReportPropertyChanging("TrailerUrl");
                _TrailerUrl = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TrailerUrl");
                OnTrailerUrlChanged();
            }
        }
        private global::System.String _TrailerUrl;
        partial void OnTrailerUrlChanging(global::System.String value);
        partial void OnTrailerUrlChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SGNMovie", "FK_STMovie", "SessionTime")]
        public EntityCollection<SessionTime> SessionTimes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SessionTime>("SGNMovie.FK_STMovie", "SessionTime");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SessionTime>("SGNMovie.FK_STMovie", "SessionTime", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SGNMovie", Name="Provider")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Provider : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Provider object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="hostUrl">Initial value of the HostUrl property.</param>
        public static Provider CreateProvider(global::System.Int32 id, global::System.String name, global::System.String hostUrl)
        {
            Provider provider = new Provider();
            provider.Id = id;
            provider.Name = name;
            provider.HostUrl = hostUrl;
            return provider;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String HostUrl
        {
            get
            {
                return _HostUrl;
            }
            set
            {
                OnHostUrlChanging(value);
                ReportPropertyChanging("HostUrl");
                _HostUrl = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("HostUrl");
                OnHostUrlChanged();
            }
        }
        private global::System.String _HostUrl;
        partial void OnHostUrlChanging(global::System.String value);
        partial void OnHostUrlChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SGNMovie", "FK_PCProvider", "ProviderCinema")]
        public EntityCollection<ProviderCinema> ProviderCinemas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProviderCinema>("SGNMovie.FK_PCProvider", "ProviderCinema");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProviderCinema>("SGNMovie.FK_PCProvider", "ProviderCinema", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SGNMovie", Name="ProviderCinema")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProviderCinema : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProviderCinema object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="provider_Id">Initial value of the Provider_Id property.</param>
        /// <param name="cinema_Id">Initial value of the Cinema_Id property.</param>
        public static ProviderCinema CreateProviderCinema(global::System.Int32 id, global::System.Int32 provider_Id, global::System.Int32 cinema_Id)
        {
            ProviderCinema providerCinema = new ProviderCinema();
            providerCinema.Id = id;
            providerCinema.Provider_Id = provider_Id;
            providerCinema.Cinema_Id = cinema_Id;
            return providerCinema;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Provider_Id
        {
            get
            {
                return _Provider_Id;
            }
            set
            {
                OnProvider_IdChanging(value);
                ReportPropertyChanging("Provider_Id");
                _Provider_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Provider_Id");
                OnProvider_IdChanged();
            }
        }
        private global::System.Int32 _Provider_Id;
        partial void OnProvider_IdChanging(global::System.Int32 value);
        partial void OnProvider_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Cinema_Id
        {
            get
            {
                return _Cinema_Id;
            }
            set
            {
                OnCinema_IdChanging(value);
                ReportPropertyChanging("Cinema_Id");
                _Cinema_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Cinema_Id");
                OnCinema_IdChanged();
            }
        }
        private global::System.Int32 _Cinema_Id;
        partial void OnCinema_IdChanging(global::System.Int32 value);
        partial void OnCinema_IdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SGNMovie", "FK_PCCinemas", "Cinema")]
        public Cinema Cinema
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Cinema>("SGNMovie.FK_PCCinemas", "Cinema").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Cinema>("SGNMovie.FK_PCCinemas", "Cinema").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Cinema> CinemaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Cinema>("SGNMovie.FK_PCCinemas", "Cinema");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Cinema>("SGNMovie.FK_PCCinemas", "Cinema", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SGNMovie", "FK_PCProvider", "Provider")]
        public Provider Provider
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Provider>("SGNMovie.FK_PCProvider", "Provider").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Provider>("SGNMovie.FK_PCProvider", "Provider").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Provider> ProviderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Provider>("SGNMovie.FK_PCProvider", "Provider");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Provider>("SGNMovie.FK_PCProvider", "Provider", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SGNMovie", "FK_STProviderCinema", "SessionTime")]
        public EntityCollection<SessionTime> SessionTimes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SessionTime>("SGNMovie.FK_STProviderCinema", "SessionTime");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SessionTime>("SGNMovie.FK_STProviderCinema", "SessionTime", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SGNMovie", Name="SessionTime")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SessionTime : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SessionTime object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="providerCinema_Id">Initial value of the ProviderCinema_Id property.</param>
        /// <param name="movie_Id">Initial value of the Movie_Id property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="time">Initial value of the Time property.</param>
        public static SessionTime CreateSessionTime(global::System.Int32 id, global::System.Int32 providerCinema_Id, global::System.Int32 movie_Id, global::System.String date, global::System.String time)
        {
            SessionTime sessionTime = new SessionTime();
            sessionTime.Id = id;
            sessionTime.ProviderCinema_Id = providerCinema_Id;
            sessionTime.Movie_Id = movie_Id;
            sessionTime.Date = date;
            sessionTime.Time = time;
            return sessionTime;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProviderCinema_Id
        {
            get
            {
                return _ProviderCinema_Id;
            }
            set
            {
                OnProviderCinema_IdChanging(value);
                ReportPropertyChanging("ProviderCinema_Id");
                _ProviderCinema_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProviderCinema_Id");
                OnProviderCinema_IdChanged();
            }
        }
        private global::System.Int32 _ProviderCinema_Id;
        partial void OnProviderCinema_IdChanging(global::System.Int32 value);
        partial void OnProviderCinema_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Movie_Id
        {
            get
            {
                return _Movie_Id;
            }
            set
            {
                OnMovie_IdChanging(value);
                ReportPropertyChanging("Movie_Id");
                _Movie_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Movie_Id");
                OnMovie_IdChanged();
            }
        }
        private global::System.Int32 _Movie_Id;
        partial void OnMovie_IdChanging(global::System.Int32 value);
        partial void OnMovie_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.String _Date;
        partial void OnDateChanging(global::System.String value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Time
        {
            get
            {
                return _Time;
            }
            set
            {
                OnTimeChanging(value);
                ReportPropertyChanging("Time");
                _Time = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Time");
                OnTimeChanged();
            }
        }
        private global::System.String _Time;
        partial void OnTimeChanging(global::System.String value);
        partial void OnTimeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SGNMovie", "FK_STMovie", "Movie")]
        public Movie Movy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Movie>("SGNMovie.FK_STMovie", "Movie").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Movie>("SGNMovie.FK_STMovie", "Movie").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Movie> MovyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Movie>("SGNMovie.FK_STMovie", "Movie");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Movie>("SGNMovie.FK_STMovie", "Movie", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SGNMovie", "FK_STProviderCinema", "ProviderCinema")]
        public ProviderCinema ProviderCinema
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProviderCinema>("SGNMovie.FK_STProviderCinema", "ProviderCinema").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProviderCinema>("SGNMovie.FK_STProviderCinema", "ProviderCinema").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProviderCinema> ProviderCinemaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProviderCinema>("SGNMovie.FK_STProviderCinema", "ProviderCinema");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProviderCinema>("SGNMovie.FK_STProviderCinema", "ProviderCinema", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
